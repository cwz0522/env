*ps_color.txt*	PSC For Vim version 6.2              Last change: 8 April 2004


PERSONAL COLOUR SWITCHER                                *ps_colour* *pscolor*


Author:  Pan, Shizhu.  <dicpan @ hotmail . com> >
	(prepend '[VIM]' in the title or your mail will be silently removed.)
<
==============================================================================
CONTENTS                                                 *psc* *psc-contents*

	1. Contents.....................|psc-contents|
	2. PSC Usage....................|psc-usage|
	3. PSC Options..................|psc-options|
	4. PSC Features Overview........|psc-overview|
	5. PSC FAQ and Tips ............|psc-faq|
	6. PSC Todo List................|psc-todo|

If you need to know `What is PSC? ' you probably want to see |psc_overview|.

Other related documentation:
|42|		Nothing yet.

==============================================================================
PSC USAGE                                                         *psc-usage*

        Step 1, Enable the color scheme ~

        To use PSC is simple, just unpack the archive and put ps_color.vim
        into your [runtimepath]/colors and add the line >

		colors ps_color

<	into your |.vimrc|.  
        (The [runtimepath] can be any directory listed in |vimfiles|, normally
        your $HOME/.vim in Unix or $HOME/vimfiles in Windows.)

	Step 2, Install the help document ~
        
        This should work for GUI with the default 'cool' style of this colour
        scheme. However. If you want more choices, or if your want to
        configure it to have a good colour in colour terminal, you may need to
        install the help document (i.e. this document) of the colour scheme to
        see the options.
        
        Find the file ps_color.txt in the archive and put it into your
        [runtimepath]/doc, then create tags for this document, see
        |add-local-help| for instructions on install help document.

        After successfully installed the help document, you can use >

        	:help psc-options
<
	to go to the following section.

==============================================================================
PSC OPTIONS                                                     *psc-options*

	You can let these options in your ~/.vimrc, these options currently
	works mainly for GUI, only some of them works for Color Term. 

	All options can be set using the 'let' command. 

								*psc_style*
	Style ~
>
	let psc_style='cool'
	let psc_style='warm'
	let psc_style='default'
	let psc_style='defdark'
<
	This selects between styles of colours, 
	The 'cool' is the default, dark background. 
	The 'warm' is newly added, (experimental), light background.

	The 'cool' style is perfect for a big and decent monitor, especially
	for high-end LCD. But in some low-end CRT monitors, the 'cool' style
	is not quite visible due to the system's anti-alias font smooth
	technique. There are two methods to work around, the first is to
	choose a thicker font which do not degraded by anti-alias; the other
	way is to use the 'warm' style which has a light background. 

	Note: the 'warm' style is still under development, I personally am not
	100 percent satisfied with the 'warm' style now but cannot identify
	where the problem is, from an aethetic point of view, (it seems that
	the saturation is too low). If you have good hints please contact me. 
	
	The 'default' and 'defdark' refers to Vim system default colorscheme.
	Which are provided only for reference.

	Let psc_style to any string other than the above 4 will switch to the
	specified color scheme. For example, let psc_style='desert' and then
	activate the ps_color, the color scheme will be chosen according to
	desert.vim color scheme.

							       *psc_fontface*
	Font face ~
>
	psc_fontface='plain'
	psc_fontface='mixed'
<
	The Vim default behavior is the 'mixed', while this colour scheme uses
	'plain', i.e. No texts are bolded font. If you want the mixed style in
	which the highlighted statements are bolded font, choose this. If you
	want all texts be bolded, choose 'plain' and specify a bolded guifont
	or terminal font.

	In GUI, this option also works for other color schemes. See
	|psc-faq-ffothers| for detail.

	Note the the 'mixed' option may have strange behavior in cterm.

							  *psc_inversed_todo*
	Inversed Todo ~
>
	psc_inversed_todo=1
<
	When set to 1, the TODO group will be dark background with light font,
	Otherwise, the TODO group have light background with dark font.
	Default is 0.

						  *psc_use_default_for_cterm*
	Use default for cterm ~
>
	psc_use_default_for_cterm=1
	psc_use_default_for_cterm=2
<
	This option is only for Colour Terms, i.e. non-gui version.
	By default this is set to zero, when this options set to 1, the cterm
	will use Vim default colorscheme with white background, when this
	option set to 2, the cterm will use Vim default colorscheme with black
	background, if your terminal has white backgound you can choose 1 or 0
	if your terminal has black background, you can choose 2 or 0.

					  *psc_statement_different_from_type*
	Statement different from type ~
>
	psc_statement_different_from_type=1
<	
	The Statement-group and Type-group are easy to distinguish, different
	colour for them are not needed, I use similar colour for S-group
	& T-group in order not to make the screen too 'colourful', also this
	saves a color name.  But if you do want the Statement & Type to be
	different colour, try 'let statement_different_from_type=1' in your
	.vimrc file.  
	Default is 0, i.e. they have very similar colour.

	Hot key define ~

	Here is an example to define hot key of different style switching,
	note that I had only given this example without actually define it.
	You can choose to define it in ~/.vimrc or anyway you prefer. 
>
	nnoremap <Leader>pc :let psc_style='cool'<CR>:colo ps_color<CR>
	nnoremap <Leader>pw :let psc_style='warm'<CR>:colo ps_color<CR>
<
==============================================================================
PSC FEATURES OVERVIEW                           *psc-features* *psc-overview*

	Features ~

	PSC is firstly a color scheme which have several styles. 
	It can have the same appearance in [cterm] as in [gui]. 
	It is designed with gentle color to minimize fatigue of eye.
	It also works with other color schemes.
	It is more configureable than most other color schemes

	Design Concern ~

	At the first glance this color scheme may look pretty 'dull', don't be
	afraid, this is quite normal. Bear in mind that a text editor is not
	a photo album, a stimulating color may look much more beautiful, but
	if you work for a long time this hurts your eye. 

	There're 3 parameters to describe a colour: Hue, Saturation and
	Brightness.  In this colour scheme, the saturation is low and the
	brightness are designed to be very close to each other in order not to
	fatigue our eyes after a whole day's programming work.

	Like TeX, "consistency" is the principle this color scheme based on.
	Default values which hurt consistency are amended. There is no
	color-cast for this color scheme, because any type of color-cast will
	cause the eyes less sensitive for particular color. So, all elementary
	colors like rgb and cymk are evenly used in this color scheme. You may
	not be very much impressed at the first glance, but on a long time
	basis it helps. 

	Needless to say, VI is an editor originally designed to do edit tasks
	in a text terminal, and VIM is an improved version of VI, its a shame
	that a color scheme cannot have the same appearance in gui and cterm.
	The cterm compatibility should be considered high priority when
	designing ViM color scheme.

	Therefore, color term scheme is also available --- for a 16-color
	term, see next section for details. The aim is to give exact the same
	color as the GUI version if properly configured.

	Comments are welcome on usenet or gmane newsgroups, gmane newsgroup is
	a mirror of vim@vim.org maillists.
	 

								  *psc-cterm*
	Colour Term ~

	The cterm color is designed mainly in these terminals: 
>
	1. Cygwin bash shell windows commandd prompt box
	2. XTERM and RXVT
	3. Other color terminals
<
	*psc-cterm-nt*
	Cygwin console is actually a Windows NT Prompt console, In Windows NT
	Prompt console you can change the exact value of each colour, so you
	can have the same colour with your GUI version of Vim, for 'cool'
	color style you just change the color according to the
	|psc-cterm-color-table|. The pre-configured Cygwin.lnk is available
	for download on my web page for Vim, at the following url: >
	http://poet.tomud.com/pub/Cygwin.lnk.gz
<
	For NT Cygwin bash shell console, this console supports 16 foregound
	colours by add bold attribute to 8 colour, the cterm=bold specifies
	which should be bright colour, so totally the 16 colour frontground is
	available, but colour name DarkXXX and LightXXX are the same.
	
	Cygwin is highly recommended for Vim user if you are using Windows NT
	based systems (e.g. NT 4.0, Win2k, WinXP, Win2003, etc). But Cygwin is
	not quite stable under Windows 95/98/ME. I'm not sure whether this
	works for DOS DJGPP or Windows 95 console version of Vim because
	I don't have them, in case you encountered problem please contact me
	if you want.

	*psc-cterm-xterm*
	XTERM is a much more feature-rich terminal than Windows Console so the
	support is much better, add the following recommend line into your
	.Xdefaults and you can achieve the same colour as in GUI version.
 
	Add the following into your .Xdefaults:
	This works for XTERM and RXVT.
>
	XTerm*color0:           #000000
	XTerm*color1:           #800000
	XTerm*color2:           #008000
	XTerm*color3:           #e0c060
	XTerm*color4:           #000080
	XTerm*color5:           #800080
	XTerm*color6:           #a6caf0
	XTerm*color7:           #d0d0d0
	XTerm*color8:           #b0b0b0
	XTerm*color9:           #f08060
	XTerm*color10:          #60f080
	XTerm*color11:          #d0d090
	XTerm*color12:          #80c0e0
	XTerm*color13:          #f0c0f0
	XTerm*color14:          #c0d8f8
	XTerm*color15:          #e0e0e0
	XTerm*cursorColor:      #00f000

	! The following are optional
	XTerm*reverseVideo:     False
	XTerm*background:       #000000
	XTerm*foreground:       #d0d0d0
	XTerm*boldMode:         False
<
	There is an assumption that your RXVT or XTERM supports 16 colours,
	most RXVTs and XTERMs support this, if yours do not, get a source of
	RXVT and recompile it.

	Sometimes the color mode are not recognized well, or you do not want
	bright foreground be bolded. If this is the case, add the following in
	your .vimrc
>
	if &term=='xterm'     " Change 'xterm' to your term name if necessary
	    set t_Co=16
	endif
<
	If the t_Co=16 have problem, set t_Co=8 and :colo ps_color again.
	vice versa.
	
	My rxvt works well with t_Co=16: >
	Rxvt v2.7.10 - released: 26 MARCH 2003
	Options:
	XPM,transparent,utmp,menubar,frills,linespace,multichar_languages,
	scrollbars=rxvt+NeXT+xterm,.Xdefaults
<	But I've know that my Rxvt v2.6.4 in another machine has problem with
	t_Co=16, if that is the case, set t_Co=8 instead.

	*psc-cterm-others*
	For other terminals, you can manually set the colour according to the
	following table

	Hints for Manually set the colour (for 'cool' style only):
	*psc-cterm-color-table*
	Color name	Hex value	Decimal value ~
	 0 Black	= #000000	0,0,0
	 4 DarkBlue	= #000080	0,0,128
	 2 DarkGreen	= #008000	0,128,0
	 6 DarkCyan	= #a6caf0	166,202,240
	 1 DarkRed	= #800000	128,0,0
	 5 DarkMagenta	= #800080	128,0,128
	 3 Brown	= #e0c060	224,192,96
	 7 Grey		= #d0d0d0	208,208,208
	 8 DarkGrey	= #b0b0b0	176,176,176
	12 Blue		= #80c0e0	128,192,224
	10 Green	= #60f080	96,240,128
	14 Cyan		= #c0d8f8	192,216,248
	 9 Red		= #f08060	240,128,96
	13 LMag.	= #f0c0f0	240,192,240
	11 Yellow	= #d0d090	208,208,144
	15 White	= #e0e0e0	224,224,224

	*psc-cterm-incompatible*
	If your colour terminal does only have 8 colours and cannot achive 16
	colours with cterm=bold, you may want to switch to other colour
	schemes to gain more readability. Anyway, you can specify in your
	.vimrc to use different colour scheme under different consoles and
	GUI. For example: 
>
	if &term=='foobar'
	    let psc_style = 'default'
	elseif (&term=='builtin_gui') || (&term=='xterm')
	    let psc_style = 'cool'
	endif
	colo ps_color
<

==============================================================================
PSC FAQ AND TIPS                                         *psc-faq* *psc-tips*
>
	Q: What is meant by `PS' ? 
<
	A: PS means: PostScript, PhotoShop, PerSonal, ... or anything you can
	   imagine and anything you want it do be.
>
	Q: How to obtain the same appreance as gui in color term?
<
	A: This need some work around, see |psc-cterm| for details.
	   Generally speaking, you should ensure your color term has support
	   for 16 forground colors, and each color is customizable.

							*psc-faq-ffothers*  >
	Q: How to use psc_fontface with other colorschemes?
<
	A: First set the colorschme to your like, then :let psc_style='other',
	   :let psc_fontface='plain', :colo ps_color
	   {The 'other' here means the colorscheme you want}
>

==============================================================================
PSC TODO LIST                                                      *psc-todo*

	o Need to improve the 'warm' style to gain readability.
	o Need to improve the 'cterm' scheme to support more terms.


==============================================================================
vim:tw=78:ts=8:ft=help:fo+=t:norl:noet:
